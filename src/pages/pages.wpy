<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="authorize-contianer">
    <image class="authorize-icon" src="../images/authorize.png"></image>
    <view class="auth-item">商城申请获取以下权限：</view>
    <view class="auth-item">获取你的公开信息（头像、昵称等）</view>
    <view class="btn-authorize">
      <button open-type="getUserInfo" type="primary" lang="zh_CN" bindgetuserinfo="onGotUserInfo">授权</button>
    </view>
  </view>
  <view class="container">
    <view class="userinfo">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import testMixin from '../mixins/test'
  import 'wepy-async-function'
  import api from '@/api/api';
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO,
    USER_INFO
  } from '@/utils/constant';
  export default class Pages extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    };
    mixins = [testMixin]
    data = {
      mynum: 20,
      userInfo: {

      },
    }
    config = {
      navigationBarTitleText: '授权登录',
    }
    async onLoad() {
      let res = await wepy.getSetting()
      if ((res.authSetting)['scope.userInfo']) {
        let userInfo = wepy.getStorageSync(USER_INFO)
        if (!userInfo.nickName) {
          let data  = await wepy.getUserInfo()
          if (data) {
            wepy.setStorageSync(USER_INFO, data.userInfo)
          }
          let res = await wepy.login()
          if (res.code) {
            let systemInfo = wepy.getSystemInfoSync();
            wepy.setStorageSync(SYSTEM_INFO, systemInfo);
            let rlt = await api.wxJsCode2Session({
              query: {
                jsCode: res.code,
                nickName: data.userInfo.nickName
              },
            })
            if (rlt.data.result) {
              let data = rlt.data;
              if (data.data.openid) {
                wepy.setStorageSync(USER_SPECICAL_INFO, data.data);
              }
            }
          }
        }
        wepy.switchTab({
          url: '/pages/home'
        })
      }
    }
    async onGotUserInfo(e) {
      if (e.detail.errMsg == 'getUserInfo:ok') {
        var cs =wepy.login({
        success (res){
          if (res.code) {
            e.detail.userInfo.code = res.code;
            wepy.setStorageSync(USER_INFO, e.detail.userInfo);
            let systemInfo = wepy.getSystemInfoSync();
            wepy.setStorageSync(SYSTEM_INFO, systemInfo);
            let rlt = api.getDiscoverList({
              query: {
                data:e.detail.userInfo
              }
            })
            console.log(rlt)
          }
        }
      })

      }else{

      }
    }
      onLoad() {


      }
      onShow(){

      };
    methods = {
      successd(res){
        console.log(res)
      }
    }

    async onLoad() {

    }
  }
</script>
